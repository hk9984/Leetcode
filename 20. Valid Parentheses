/*
Runtime: 2 ms, faster than 61.60% of Java online submissions for Valid Parentheses.
Memory Usage: 34.4 MB, less than 100.00% of Java online submissions for Valid Parentheses.
*/

class Solution {
    public boolean isValid(String s) {
        
        Map<Character, Character>parMap = new HashMap<Character, Character>();
        
        parMap.put(')', '(');
        parMap.put('}', '{');
        parMap.put(']', '[');
        
        Stack <Character>parStack = new Stack<Character>();
        
        for(int i=0; i<s.length(); i++)
        {
            if(parMap.containsKey(s.charAt(i)))
            {
                char topEl = parStack.empty() ? '#' : parStack.pop();
                
                if(topEl != parMap.get(s.charAt(i)))
                    return false;
            }
            else
                parStack.push(s.charAt(i));
                    
        }
        
        return parStack.empty()? true : false;
    }
}
